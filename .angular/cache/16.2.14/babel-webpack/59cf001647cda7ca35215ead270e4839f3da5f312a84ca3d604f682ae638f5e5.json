{"ast":null,"code":"import _asyncToGenerator from \"C:/Protfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateForm } from '../../utils/validateForm/validateForm';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\nconst findHTMLForm = form => {\n  return typeof form === 'string' ? document.querySelector(form) : form;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (serviceID, templateID, form, options) {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = store.storageProvider || opts.storageProvider;\n    const blockList = {\n      ...store.blockList,\n      ...opts.blockList\n    };\n    const limitRate = {\n      ...store.limitRate,\n      ...opts.limitRate\n    };\n    if (blockHeadless && isHeadless(navigator)) {\n      return Promise.reject(headlessError());\n    }\n    const currentForm = findHTMLForm(form);\n    validateParams(publicKey, serviceID, templateID);\n    validateForm(currentForm);\n    const formData = new FormData(currentForm);\n    if (isBlockedValueInParams(blockList, formData)) {\n      return Promise.reject(blockedEmailError());\n    }\n    if (yield isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n      return Promise.reject(limitRateError());\n    }\n    formData.append('lib_version', '4.3.3');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', publicKey);\n    return sendPost('/api/v1.0/email/send-form', formData);\n  });\n  return function sendForm(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["store","sendPost","buildOptions","validateForm","validateParams","isHeadless","headlessError","isBlockedValueInParams","blockedEmailError","isLimitRateHit","limitRateError","findHTMLForm","form","document","querySelector","sendForm","_ref","_asyncToGenerator","serviceID","templateID","options","opts","publicKey","blockHeadless","storageProvider","blockList","limitRate","navigator","Promise","reject","currentForm","formData","FormData","location","pathname","append","_x","_x2","_x3","_x4","apply","arguments"],"sources":["C:/Protfolio/node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js"],"sourcesContent":["import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateForm } from '../../utils/validateForm/validateForm';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\nconst findHTMLForm = (form) => {\n    return typeof form === 'string' ? document.querySelector(form) : form;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = async (serviceID, templateID, form, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = store.storageProvider || opts.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    const currentForm = findHTMLForm(form);\n    validateParams(publicKey, serviceID, templateID);\n    validateForm(currentForm);\n    const formData = new FormData(currentForm);\n    if (isBlockedValueInParams(blockList, formData)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    formData.append('lib_version', '4.3.3');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', publicKey);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n"],"mappings":";AAAA,SAASA,KAAK,QAAQ,mBAAmB;AACzC,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,YAAY,QAAQ,uCAAuC;AACpE,SAASC,YAAY,QAAQ,uCAAuC;AACpE,SAASC,cAAc,QAAQ,2CAA2C;AAC1E,SAASC,UAAU,QAAQ,mCAAmC;AAC9D,SAASC,aAAa,QAAQ,0CAA0C;AACxE,SAASC,sBAAsB,QAAQ,2DAA2D;AAClG,SAASC,iBAAiB,QAAQ,kDAAkD;AACpF,SAASC,cAAc,QAAQ,2CAA2C;AAC1E,SAASC,cAAc,QAAQ,4CAA4C;AAC3E,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAC3B,OAAO,OAAOA,IAAI,KAAK,QAAQ,GAAGC,QAAQ,CAACC,aAAa,CAACF,IAAI,CAAC,GAAGA,IAAI;AACzE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMG,QAAQ;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,SAAS,EAAEC,UAAU,EAAEP,IAAI,EAAEQ,OAAO,EAAK;IACpE,MAAMC,IAAI,GAAGnB,YAAY,CAACkB,OAAO,CAAC;IAClC,MAAME,SAAS,GAAGD,IAAI,CAACC,SAAS,IAAItB,KAAK,CAACsB,SAAS;IACnD,MAAMC,aAAa,GAAGF,IAAI,CAACE,aAAa,IAAIvB,KAAK,CAACuB,aAAa;IAC/D,MAAMC,eAAe,GAAGxB,KAAK,CAACwB,eAAe,IAAIH,IAAI,CAACG,eAAe;IACrE,MAAMC,SAAS,GAAG;MAAE,GAAGzB,KAAK,CAACyB,SAAS;MAAE,GAAGJ,IAAI,CAACI;IAAU,CAAC;IAC3D,MAAMC,SAAS,GAAG;MAAE,GAAG1B,KAAK,CAAC0B,SAAS;MAAE,GAAGL,IAAI,CAACK;IAAU,CAAC;IAC3D,IAAIH,aAAa,IAAIlB,UAAU,CAACsB,SAAS,CAAC,EAAE;MACxC,OAAOC,OAAO,CAACC,MAAM,CAACvB,aAAa,CAAC,CAAC,CAAC;IAC1C;IACA,MAAMwB,WAAW,GAAGnB,YAAY,CAACC,IAAI,CAAC;IACtCR,cAAc,CAACkB,SAAS,EAAEJ,SAAS,EAAEC,UAAU,CAAC;IAChDhB,YAAY,CAAC2B,WAAW,CAAC;IACzB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAACF,WAAW,CAAC;IAC1C,IAAIvB,sBAAsB,CAACkB,SAAS,EAAEM,QAAQ,CAAC,EAAE;MAC7C,OAAOH,OAAO,CAACC,MAAM,CAACrB,iBAAiB,CAAC,CAAC,CAAC;IAC9C;IACA,UAAUC,cAAc,CAACwB,QAAQ,CAACC,QAAQ,EAAER,SAAS,EAAEF,eAAe,CAAC,EAAE;MACrE,OAAOI,OAAO,CAACC,MAAM,CAACnB,cAAc,CAAC,CAAC,CAAC;IAC3C;IACAqB,QAAQ,CAACI,MAAM,CAAC,aAAa,EAAE,OAAO,CAAC;IACvCJ,QAAQ,CAACI,MAAM,CAAC,YAAY,EAAEjB,SAAS,CAAC;IACxCa,QAAQ,CAACI,MAAM,CAAC,aAAa,EAAEhB,UAAU,CAAC;IAC1CY,QAAQ,CAACI,MAAM,CAAC,SAAS,EAAEb,SAAS,CAAC;IACrC,OAAOrB,QAAQ,CAAC,2BAA2B,EAAE8B,QAAQ,CAAC;EAC1D,CAAC;EAAA,gBAzBYhB,QAAQA,CAAAqB,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAAvB,IAAA,CAAAwB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAyBpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}