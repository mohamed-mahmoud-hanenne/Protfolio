{"ast":null,"code":"import _asyncToGenerator from \"C:/Protfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { validateTemplateParams } from '../../utils/validateTemplateParams/validateTemplateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templateParams - the template params, what will be set to the EmailJS template\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (serviceID, templateID, templateParams, options) {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = store.storageProvider || opts.storageProvider;\n    const blockList = {\n      ...store.blockList,\n      ...opts.blockList\n    };\n    const limitRate = {\n      ...store.limitRate,\n      ...opts.limitRate\n    };\n    if (blockHeadless && isHeadless(navigator)) {\n      return Promise.reject(headlessError());\n    }\n    validateParams(publicKey, serviceID, templateID);\n    validateTemplateParams(templateParams);\n    if (templateParams && isBlockedValueInParams(blockList, templateParams)) {\n      return Promise.reject(blockedEmailError());\n    }\n    if (yield isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n      return Promise.reject(limitRateError());\n    }\n    const params = {\n      lib_version: '4.3.3',\n      user_id: publicKey,\n      service_id: serviceID,\n      template_id: templateID,\n      template_params: templateParams\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n      'Content-type': 'application/json'\n    });\n  });\n  return function send(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["store","sendPost","buildOptions","validateParams","validateTemplateParams","isHeadless","headlessError","isBlockedValueInParams","blockedEmailError","isLimitRateHit","limitRateError","send","_ref","_asyncToGenerator","serviceID","templateID","templateParams","options","opts","publicKey","blockHeadless","storageProvider","blockList","limitRate","navigator","Promise","reject","location","pathname","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","_x","_x2","_x3","_x4","apply","arguments"],"sources":["C:/Protfolio/node_modules/@emailjs/browser/es/methods/send/send.js"],"sourcesContent":["import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { validateTemplateParams } from '../../utils/validateTemplateParams/validateTemplateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templateParams - the template params, what will be set to the EmailJS template\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = async (serviceID, templateID, templateParams, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = store.storageProvider || opts.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    validateParams(publicKey, serviceID, templateID);\n    validateTemplateParams(templateParams);\n    if (templateParams && isBlockedValueInParams(blockList, templateParams)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    const params = {\n        lib_version: '4.3.3',\n        user_id: publicKey,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templateParams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n"],"mappings":";AAAA,SAASA,KAAK,QAAQ,mBAAmB;AACzC,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,YAAY,QAAQ,uCAAuC;AACpE,SAASC,cAAc,QAAQ,2CAA2C;AAC1E,SAASC,sBAAsB,QAAQ,2DAA2D;AAClG,SAASC,UAAU,QAAQ,mCAAmC;AAC9D,SAASC,aAAa,QAAQ,0CAA0C;AACxE,SAASC,sBAAsB,QAAQ,2DAA2D;AAClG,SAASC,iBAAiB,QAAQ,kDAAkD;AACpF,SAASC,cAAc,QAAQ,2CAA2C;AAC1E,SAASC,cAAc,QAAQ,4CAA4C;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,IAAI;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,SAAS,EAAEC,UAAU,EAAEC,cAAc,EAAEC,OAAO,EAAK;IAC1E,MAAMC,IAAI,GAAGhB,YAAY,CAACe,OAAO,CAAC;IAClC,MAAME,SAAS,GAAGD,IAAI,CAACC,SAAS,IAAInB,KAAK,CAACmB,SAAS;IACnD,MAAMC,aAAa,GAAGF,IAAI,CAACE,aAAa,IAAIpB,KAAK,CAACoB,aAAa;IAC/D,MAAMC,eAAe,GAAGrB,KAAK,CAACqB,eAAe,IAAIH,IAAI,CAACG,eAAe;IACrE,MAAMC,SAAS,GAAG;MAAE,GAAGtB,KAAK,CAACsB,SAAS;MAAE,GAAGJ,IAAI,CAACI;IAAU,CAAC;IAC3D,MAAMC,SAAS,GAAG;MAAE,GAAGvB,KAAK,CAACuB,SAAS;MAAE,GAAGL,IAAI,CAACK;IAAU,CAAC;IAC3D,IAAIH,aAAa,IAAIf,UAAU,CAACmB,SAAS,CAAC,EAAE;MACxC,OAAOC,OAAO,CAACC,MAAM,CAACpB,aAAa,CAAC,CAAC,CAAC;IAC1C;IACAH,cAAc,CAACgB,SAAS,EAAEL,SAAS,EAAEC,UAAU,CAAC;IAChDX,sBAAsB,CAACY,cAAc,CAAC;IACtC,IAAIA,cAAc,IAAIT,sBAAsB,CAACe,SAAS,EAAEN,cAAc,CAAC,EAAE;MACrE,OAAOS,OAAO,CAACC,MAAM,CAAClB,iBAAiB,CAAC,CAAC,CAAC;IAC9C;IACA,UAAUC,cAAc,CAACkB,QAAQ,CAACC,QAAQ,EAAEL,SAAS,EAAEF,eAAe,CAAC,EAAE;MACrE,OAAOI,OAAO,CAACC,MAAM,CAAChB,cAAc,CAAC,CAAC,CAAC;IAC3C;IACA,MAAMmB,MAAM,GAAG;MACXC,WAAW,EAAE,OAAO;MACpBC,OAAO,EAAEZ,SAAS;MAClBa,UAAU,EAAElB,SAAS;MACrBmB,WAAW,EAAElB,UAAU;MACvBmB,eAAe,EAAElB;IACrB,CAAC;IACD,OAAOf,QAAQ,CAAC,sBAAsB,EAAEkC,IAAI,CAACC,SAAS,CAACP,MAAM,CAAC,EAAE;MAC5D,cAAc,EAAE;IACpB,CAAC,CAAC;EACN,CAAC;EAAA,gBA5BYlB,IAAIA,CAAA0B,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAA5B,IAAA,CAAA6B,KAAA,OAAAC,SAAA;EAAA;AAAA,GA4BhB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}